{"version":3,"sources":["../../src/services/internal.js"],"names":["Internal","constructor","userId","sessionId","userInfo","id","session","client","JsonDB","Config","push","fullName","createUser","getUserInfo","getData","error","sendOTP","otp","verifyOTP","token","getChecklist","checkList","index","status","Status","Yes","read","updateTask","map","task","newTask","No"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,MAAMA,QAAN,CAAe;AAC7BC,EAAAA,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoB;AAC9B,SAAKC,QAAL,CAAcC,EAAd,GAAmBH,MAAnB;AACA,SAAKE,QAAL,CAAcE,OAAd,GAAwBH,SAAxB;AACA,SAAKI,MAAL,GAAc,IAAIC,kBAAJ,CAAW,IAAIC,oBAAJ,CAAW,YAAX,EAAyB,IAAzB,EAA+B,KAA/B,EAAsC,GAAtC,CAAX,CAAd;AACA,SAAKF,MAAL,CAAYG,IAAZ,CAAiB,OAAjB,EAA0B;AAAEL,MAAAA,EAAE,EAAE,QAAN;AAAgBM,MAAAA,QAAQ,EAAE;AAA1B,KAA1B;AACA;;AAED,QAAMC,UAAN,CAAiBR,QAAjB,EAA2B;AAC1B,SAAKG,MAAL,CAAYG,IAAZ,CAAiB,OAAjB,EAA0BN,QAA1B;AACA;;AAED,QAAMS,WAAN,GAAoB;AACnB,QAAI;AACH,WAAKT,QAAL,GAAgB,KAAKG,MAAL,CAAYO,OAAZ,CAAqB,GAAE,KAAKV,QAAL,CAAcC,EAAG,EAAxC,CAAhB;AACA,aAAO,KAAKD,QAAZ;AACA,KAHD,CAGE,OAAOW,KAAP,EAAc;AACf,aAAO,EAAP;AACA;AACD;;AAED,QAAMC,OAAN,GAAgB;AACf,SAAKZ,QAAL,CAAca,GAAd,GAAoB,QAApB;AACA;;AAGD,QAAMC,SAAN,GAAkB;AACjB,SAAKC,KAAL,GAAa,YAAb;AACA,WAAO,IAAP;AACA;;AAED,QAAMC,YAAN,GAAqB;AACpB,QAAI,CAAC,KAAKD,KAAV,EAAiB;AAChB,aAAO,EAAP;AACA;;AACD,SAAKE,SAAL,GAAiB,CAAC;AACjBhB,MAAAA,EAAE,EAAE,eADa;AAEjBiB,MAAAA,KAAK,EAAE,CAFU;AAGjBC,MAAAA,MAAM,EAAEC,MAAM,CAACC,GAHE;AAIjBC,MAAAA,IAAI,EAAE;AAJW,KAAD,CAAjB;AAMA,WAAO,KAAKL,SAAZ;AACA;;AAED,QAAMM,UAAN,CAAiBtB,EAAjB,EAAqBkB,MAArB,EAA6B;AAC5B,SAAKF,SAAL,CAAeO,GAAf,CAAoBC,IAAD,IAAU;AAC5B,YAAMC,OAAO,qBAAQD,IAAR,CAAb;;AACA,UAAIA,IAAI,CAACxB,EAAL,KAAYA,EAAhB,EAAoB;AACnB,YAAIkB,MAAJ,EAAY;AACXO,UAAAA,OAAO,CAACP,MAAR,GAAiBA,MAAM,KAAK,KAAX,GAAmBC,MAAM,CAACC,GAA1B,GAAgCD,MAAM,CAACO,EAAxD;AACA;;AACDD,QAAAA,OAAO,CAACJ,IAAR,GAAe,IAAf;AACA;;AACD,aAAOI,OAAP;AACA,KATD;AAUA;;AAvD4B","sourcesContent":["import { JsonDB } from 'node-json-db';\nimport { Config } from 'node-json-db/dist/lib/JsonDBConfig';\n\nexport default class Internal {\n\tconstructor(userId, sessionId) {\n\t\tthis.userInfo.id = userId;\n\t\tthis.userInfo.session = sessionId;\n\t\tthis.client = new JsonDB(new Config('myDataBase', true, false, '/'));\n\t\tthis.client.push('/user', { id: 'abcdef', fullName: 'SonVT' });\n\t}\n\n\tasync createUser(userInfo) {\n\t\tthis.client.push('/user', userInfo);\n\t}\n\n\tasync getUserInfo() {\n\t\ttry {\n\t\t\tthis.userInfo = this.client.getData(`${this.userInfo.id}`);\n\t\t\treturn this.userInfo;\n\t\t} catch (error) {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tasync sendOTP() {\n\t\tthis.userInfo.otp = '111111';\n\t}\n\n\n\tasync verifyOTP() {\n\t\tthis.token = 'Test Token';\n\t\treturn true;\n\t}\n\n\tasync getChecklist() {\n\t\tif (!this.token) {\n\t\t\treturn [];\n\t\t}\n\t\tthis.checkList = [{\n\t\t\tid: 'this_is_first',\n\t\t\tindex: 0,\n\t\t\tstatus: Status.Yes,\n\t\t\tread: false,\n\t\t}];\n\t\treturn this.checkList;\n\t}\n\n\tasync updateTask(id, status) {\n\t\tthis.checkList.map((task) => {\n\t\t\tconst newTask = { ...task };\n\t\t\tif (task.id === id) {\n\t\t\t\tif (status) {\n\t\t\t\t\tnewTask.status = status === 'yes' ? Status.Yes : Status.No;\n\t\t\t\t}\n\t\t\t\tnewTask.read = true;\n\t\t\t}\n\t\t\treturn newTask;\n\t\t});\n\t}\n}\n"],"file":"internal.js"}