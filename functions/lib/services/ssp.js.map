{"version":3,"sources":["../../src/services/ssp.js"],"names":["Internal","constructor","userId","sessionId","userInfo","id","session","getUserInfo","fullName","sendOTP","otp","verifyOTP","token","getChecklist","checkList","index","status","Status","Yes","read","updateTask","map","task","newTask","No"],"mappings":";;;;;;;;;;;;;AACe,MAAMA,QAAN,CAAe;AAC7BC,EAAAA,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoB;AAC9B,SAAKC,QAAL,CAAcC,EAAd,GAAmBH,MAAnB;AACA,SAAKE,QAAL,CAAcE,OAAd,GAAwBH,SAAxB;AACA;;AAED,QAAMI,WAAN,GAAmB;AAClB;AACA,SAAKH,QAAL,qBACI,KAAKA,QADT;AAECI,MAAAA,QAAQ,EAAE;AAFX;AAIA;;AAED,QAAMC,OAAN,GAAe;AACd;AACA,SAAKL,QAAL,CAAcM,GAAd,GAAoB,QAApB;AACA;;AAGD,QAAMC,SAAN,GAAkB;AACjB;AACA,SAAKC,KAAL,GAAa,YAAb;AACA,WAAO,IAAP;AACA;;AAED,QAAMC,YAAN,GAAqB;AACpB,QAAI,CAAC,KAAKD,KAAV,EAAiB;AAChB,aAAO,EAAP;AACA;;AACD,SAAKE,SAAL,GAAiB,CAAC;AACjBT,MAAAA,EAAE,EAAE,eADa;AAEjBU,MAAAA,KAAK,EAAE,CAFU;AAGjBC,MAAAA,MAAM,EAAEC,MAAM,CAACC,GAHE;AAIjBC,MAAAA,IAAI,EAAE;AAJW,KAAD,CAAjB;AAMA,WAAO,KAAKL,SAAZ;AACA;;AAED,QAAMM,UAAN,CAAiBf,EAAjB,EAAqBW,MAArB,EAA4B;AAC3B,SAAKF,SAAL,CAAeO,GAAf,CAAoBC,IAAD,IAAU;AAC5B,YAAMC,OAAO,qBAAQD,IAAR,CAAb;;AACA,UAAIA,IAAI,CAACjB,EAAL,KAAYA,EAAhB,EAAoB;AACnB,YAAIW,MAAJ,EAAY;AACXO,UAAAA,OAAO,CAACP,MAAR,GAAiBA,MAAM,KAAK,KAAX,GAAmBC,MAAM,CAACC,GAA1B,GAAgCD,MAAM,CAACO,EAAxD;AACA;;AACDD,QAAAA,OAAO,CAACJ,IAAR,GAAe,IAAf;AACA;;AACD,aAAOI,OAAP;AACA,KATD;AAUA;;AAlD4B","sourcesContent":["\nexport default class Internal {\n\tconstructor(userId, sessionId) {\n\t\tthis.userInfo.id = userId;\n\t\tthis.userInfo.session = sessionId;\n\t}\n\n\tasync getUserInfo(){\n\t\t// This will call to SSP to send OTP to device\n\t\tthis.userInfo = {\n\t\t\t...this.userInfo,\n\t\t\tfullName: 'Test',\n\t\t};\n\t}\n\n\tasync sendOTP(){\n\t\t// This will call to SSP to send OTP to device\n\t\tthis.userInfo.otp = '111111';\n\t}\n\n\n\tasync verifyOTP() {\n\t\t// This will call to SSP to send OTP to device\n\t\tthis.token = 'Test Token';\n\t\treturn true;\n\t}\n\n\tasync getChecklist() {\n\t\tif (!this.token) {\n\t\t\treturn [];\n\t\t}\n\t\tthis.checkList = [{\n\t\t\tid: 'this_is_first',\n\t\t\tindex: 0,\n\t\t\tstatus: Status.Yes,\n\t\t\tread: false,\n\t\t}];\n\t\treturn this.checkList;\n\t}\n\n\tasync updateTask(id, status){\n\t\tthis.checkList.map((task) => {\n\t\t\tconst newTask = { ...task };\n\t\t\tif (task.id === id) {\n\t\t\t\tif (status) {\n\t\t\t\t\tnewTask.status = status === 'yes' ? Status.Yes : Status.No;\n\t\t\t\t}\n\t\t\t\tnewTask.read = true;\n\t\t\t}\n\t\t\treturn newTask;\n\t\t});\n\t}\n}\n"],"file":"ssp.js"}