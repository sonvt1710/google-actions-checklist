{"version":3,"sources":["../../../src/intentHandlers/alexaSkills/start.js"],"names":["LaunchRequestHandler","canHandle","handlerInput","requestEnvelope","request","type","handle","speechText","console","log","responseBuilder","speak","reprompt","withSimpleCard","getResponse","GetCurrentTimeIntent","intent","name","HelpIntentHandler","CancelAndStopIntentHandler","SessionEndedRequestHandler"],"mappings":";;;;;;;AAAA;;AACA;AAEA,MAAMA,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,WAAOA,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCC,IAArC,KAA8C,eAArD;AACD,GAH0B;;AAI3BC,EAAAA,MAAM,CAACJ,YAAD,EAAe;AACnB,UAAMK,UAAU,GAAG,qDAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,YAAvC;AACA,WAAOA,YAAY,CAACQ,eAAb,CACJC,KADI,CACEJ,UADF,EAEJK,QAFI,CAEKL,UAFL,EAGJM,cAHI,CAGW,UAHX,EAGuBN,UAHvB,EAIJO,WAJI,EAAP;AAKD;;AAZ0B,CAA7B;;AAeA,MAAMC,oBAAoB,GAAG;AAC3Bd,EAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,WAAOA,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCC,IAArC,KAA8C,eAA9C,IACEH,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCY,MAArC,CAA4CC,IAA5C,KAAqD,kBAD9D;AAED,GAJ0B;;AAK3BX,EAAAA,MAAM,CAACJ,YAAD,EAAe;AACnB,UAAMK,UAAU,GAAI,GAAE,wBAAc,EAApC;AACA,WAAOL,YAAY,CAACQ,eAAb,CACJC,KADI,CACEJ,UADF,EAEJM,cAFI,CAEW,UAFX,EAEuBN,UAFvB,EAGJO,WAHI,EAAP;AAID;;AAX0B,CAA7B;;AAcA,MAAMI,iBAAiB,GAAG;AACxBjB,EAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,WAAOA,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCC,IAArC,KAA8C,eAA9C,IACEH,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCY,MAArC,CAA4CC,IAA5C,KAAqD,mBAD9D;AAED,GAJuB;;AAKxBX,EAAAA,MAAM,CAACJ,YAAD,EAAe;AACnB,UAAMK,UAAU,GAAG,0BAAnB;AACA,WAAOL,YAAY,CAACQ,eAAb,CACJC,KADI,CACEJ,UADF,EAEJK,QAFI,CAEKL,UAFL,EAGJM,cAHI,CAGW,aAHX,EAG0BN,UAH1B,EAIJO,WAJI,EAAP;AAKD;;AAZuB,CAA1B;;AAeA,MAAMK,0BAA0B,GAAG;AACjClB,EAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,WAAOA,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCC,IAArC,KAA8C,eAA9C,KACGH,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCY,MAArC,CAA4CC,IAA5C,KAAqD,qBAArD,IACGf,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCY,MAArC,CAA4CC,IAA5C,KAAqD,mBAF3D,CAAP;AAGD,GALgC;;AAMjCX,EAAAA,MAAM,CAACJ,YAAD,EAAe;AACnB,UAAMK,UAAU,GAAG,UAAnB;AACA,WAAOL,YAAY,CAACQ,eAAb,CACJC,KADI,CACEJ,UADF,EAEJM,cAFI,CAEW,aAFX,EAE0BN,UAF1B,EAGJO,WAHI,EAAP;AAID;;AAZgC,CAAnC;;AAeA,MAAMM,0BAA0B,GAAG;AACjCnB,EAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,WAAOA,YAAY,CAACC,eAAb,CAA6BC,OAA7B,CAAqCC,IAArC,KAA8C,qBAArD;AACD,GAHgC;;AAIjCC,EAAAA,MAAM,CAACJ,YAAD,EAAe;AACnB;AACA,WAAOA,YAAY,CAACQ,eAAb,CAA6BI,WAA7B,EAAP;AACD;;AAPgC,CAAnC","sourcesContent":["import { currentTime } from '../../utils/time';\n// import ask-sdk-core\n\nconst LaunchRequestHandler = {\n  canHandle(handlerInput) {\n    return handlerInput.requestEnvelope.request.type === 'LaunchRequest';\n  },\n  handle(handlerInput) {\n    const speechText = 'Welcome to the Alexa Skills Kit, you can say hello!';\n    console.log('-++++++++++++++++++++++', handlerInput);\n    return handlerInput.responseBuilder\n      .speak(speechText)\n      .reprompt(speechText)\n      .withSimpleCard('Ask Time', speechText)\n      .getResponse();\n  },\n};\n\nconst GetCurrentTimeIntent = {\n  canHandle(handlerInput) {\n    return handlerInput.requestEnvelope.request.type === 'IntentRequest'\n          && handlerInput.requestEnvelope.request.intent.name === 'HelloWorldIntent';\n  },\n  handle(handlerInput) {\n    const speechText = `${currentTime()}`;\n    return handlerInput.responseBuilder\n      .speak(speechText)\n      .withSimpleCard('Ask Time', speechText)\n      .getResponse();\n  },\n};\n\nconst HelpIntentHandler = {\n  canHandle(handlerInput) {\n    return handlerInput.requestEnvelope.request.type === 'IntentRequest'\n          && handlerInput.requestEnvelope.request.intent.name === 'AMAZON.HelpIntent';\n  },\n  handle(handlerInput) {\n    const speechText = 'You can say hello to me!';\n    return handlerInput.responseBuilder\n      .speak(speechText)\n      .reprompt(speechText)\n      .withSimpleCard('Hello World', speechText)\n      .getResponse();\n  },\n};\n\nconst CancelAndStopIntentHandler = {\n  canHandle(handlerInput) {\n    return handlerInput.requestEnvelope.request.type === 'IntentRequest'\n          && (handlerInput.requestEnvelope.request.intent.name === 'AMAZON.CancelIntent'\n              || handlerInput.requestEnvelope.request.intent.name === 'AMAZON.StopIntent');\n  },\n  handle(handlerInput) {\n    const speechText = 'Goodbye!';\n    return handlerInput.responseBuilder\n      .speak(speechText)\n      .withSimpleCard('Hello World', speechText)\n      .getResponse();\n  },\n};\n\nconst SessionEndedRequestHandler = {\n  canHandle(handlerInput) {\n    return handlerInput.requestEnvelope.request.type === 'SessionEndedRequest';\n  },\n  handle(handlerInput) {\n    // any cleanup logic goes here\n    return handlerInput.responseBuilder.getResponse();\n  },\n};\n\nexport {\n  LaunchRequestHandler,\n  GetCurrentTimeIntent,\n  HelpIntentHandler,\n  CancelAndStopIntentHandler,\n  SessionEndedRequestHandler,\n};\n"],"file":"start.js"}